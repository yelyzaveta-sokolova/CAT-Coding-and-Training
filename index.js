(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&c(s)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();const n=document.querySelector(".btn-scroll-top");window.addEventListener("scroll",()=>{window.scrollY>300?n.classList.remove("is-btnshow-hide"):n.classList.add("is-btnshow-hide")});n.onclick=()=>{window.scrollTo({top:0,behavior:"smooth"})};const l=document.querySelector(".js-observered"),a={root:null,rootMargin:"0px 0px 0px 0px",threshold:.5},d=i=>{if(i[0].isIntersecting){const o=document.getElementsByClassName("marquee-line");Array.from(o).forEach(r=>r.style.animationName="marqueeLine")}else{const o=document.getElementsByClassName("marquee-line");Array.from(o).forEach(r=>r.style.animationName="none")}},u=new IntersectionObserver(d,a);u.observe(l);
//# sourceMappingURL=index.js.map
